name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        node-version: [22.x, 24.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    name: Build with ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: ./.github/actions/setup-project
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore or cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: nextjs-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('src/**') }}

      - name: Build Next.js
        run: npm run build:ci
        env:
          # Required Clerk variables
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          # Database
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          # R2 Storage
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          # Build environment
          NODE_ENV: production

      - if: matrix.node-version == '22.x' && success()
        name: Cache Next.js build output
        uses: actions/cache/save@v4
        with:
          path: |
            .next
          key: nextjs-build-${{ matrix.node-version }}-${{ github.sha }}

  static:
    strategy:
      matrix:
        node-version: [22.x]

    name: Run static checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Retrieve Git history, needed to verify commits

      - name: Set up Node.js environment
        uses: ./.github/actions/setup-project
        with:
          node-version: ${{ matrix.node-version }}

      - if: github.event_name == 'pull_request'
        name: Validate all commits from PR
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Linter
        run: npm run lint

      - name: Type checking
        run: npm run check:types
        env:
          # Required Clerk variables
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          # Database
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          # R2 Storage
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          # Build environment
          NODE_ENV: production

      - name: Check dependencies
        run: npm run check:deps

  unit:
    strategy:
      matrix:
        node-version: [22.x]

    name: Run unit tests
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: ./.github/actions/setup-project
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run unit tests
        uses: docker://mcr.microsoft.com/playwright:v1.54.0
        with:
          args: npm run test -- --run --project=unit --coverage
        env:
          # Required Clerk variables
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          # Database
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          # Test environment
          NODE_ENV: test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  e2e:
    strategy:
      matrix:
        node-version: [22.x]

    name: Run E2E tests
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # For chromatic

      - name: Set up Node.js environment
        uses: ./.github/actions/setup-project
        with:
          node-version: ${{ matrix.node-version }}
          restore-nextjs-cache: true

      - name: Restore Next.js build cache
        uses: actions/cache@v4
        with:
          path: |
            .next
          key: nextjs-build-${{ matrix.node-version }}-${{ github.sha }}

      - name: Build Next.js for E2E tests
        run: npm run build:ci
        env:
          # Required Clerk variables
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          # Database
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          # R2 Storage
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          # Build environment
          NODE_ENV: production

      - name: Run E2E tests
        uses: docker://mcr.microsoft.com/playwright:v1.54.0
        with:
          args: sh -c "HOME=/root npm run test:e2e" # Set HOME to /root to avoid Playwright error with Firebox
        env:
          # Required Clerk variables
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          # Database
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          # Test environment
          NODE_ENV: test

      - name: Fix test results permission # Give permissions to test results needed by Chromatic
        run: |
          sudo chmod -R 777 test-results

      # Temporarily disabled until Chromatic service is set up
      # - name: Run visual regression tests
      #   uses: chromaui/action@v13
      #   with:
      #     playwright: true
      #     exitOnceUploaded: true # Speed up by skipping the build results
      #     outputDir: storybook-static
      #     projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 7
